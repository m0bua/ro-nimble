image: registry.gitlab.rozetka.company/common/ci-docker-images/ci-deployer-php74:latest

variables:
  #for RABBITMQ
  CONFIGURATION_MESSAGEBUS_HOST: selfi-rabbitmq
  CONFIGURATION_MESSAGEBUS_LOGIN: guest
  CONFIGURATION_MESSAGEBUS_PASSWORD: guest
  CONFIGURATION_MESSAGEBUS_ROUTINGKEY: '#'
  RABBITMQ_DEFAULT_USER: guest
  RABBITMQ_DEFAULT_PASS: guest
  TELEGRAM_CHAT_ID: "-1001552457457"
  #for CI pipelines
  CI_HELPER_GET_DEPENDENCIES_V2: 1
  PROJECT_PREFIX: SELFI
  MAIN_BRANCH: master
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME


before_script:
  - export VAULT_ADDR=https://vault.rozetka.company:8200
  - vault read -field=PROD_PRIVATE devops/infra/rzk > /root/.ssh/id_rsa
  - chmod 600 /root/.ssh/id_rsa

stages:
  - build
  - unit-tests
  - run_autotest
  - report
  - deploy
  - rollback
  - stop-restart
  - start

build:
  image: registry.gitlab.rozetka.company/common/ci-docker-images/ci-php74:latest
  stage: build
  tags:
   - rozetka-shared-standart
  before_script:
    - git config --global core.sshCommand 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
    - chmod 600 /root/.ssh
    - export VAULT_ADDR=https://vault.rozetka.company:8200
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=nimble-staging jwt=$CI_JOB_JWT)"
    - vault read -field=PROD_PRIVATE devops/infra/rzk > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
  script:
    - ci-helper rebase-main
    - cp env.test-default .env.test
    - cp env.test-default .env
    - composer install
  only:
    - branches
    - tags
  when: always
  artifacts:
    paths:
      - ./
    expire_in: 1 day

run_autotest:
  image: registry.gitlab.rozetka.company/common/ci-docker-images/ci-tests-php74:latest
  stage: run_autotest
  except:  [tags]
  tags:
    - rozetka-shared-standart
  services:
    - name: registry.gitlab.rozetka.company/ivv/nimble/postgre-ci:1.0
      alias: selfi-postgre
    - name: redis
      alias: selfi-redis
    - name: jamesdbloom/mockserver:latest
      alias: mock-server
    - name: rabbitmq:3.6-management-alpine
      alias: selfi-rabbitmq
    - name: elasticsearch:7.12.1
      alias: selfi-elastic
      command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
  variables:
    ELASTICSEARCH_URL: "http://selfi-elastic:9200"
    GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  before_script:
    - git config --global core.sshCommand 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
    - chmod 600 /root/.ssh
    - export VAULT_ADDR=https://vault.rozetka.company:8200
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=nimble-staging jwt=$CI_JOB_JWT)"
    - vault read -field=PROD_PRIVATE devops/infra/rzk > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
  script:
    - echo "127.0.0.1 selection-api.local" >> /etc/hosts
    - cp env.test-default .env.test
    - cp env.test-default .env
    - init
    - php artisan migrate
    - sleep 30
    - vendor/bin/codecept run -c vendor/ivv/nimble-test -g api --html
  only:
    - branches
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/runtime
      - ${CI_PROJECT_DIR}/console/runtime
      - ${CI_PROJECT_DIR}/vendor/ivv/nimble-test/tests/_output/allure-results
    expire_in: 1 week
  when: always




run-unit:
  image: registry.gitlab.rozetka.company/ivv/nimble/php-ci:1.1
  stage: unit-tests
  #except:  [tags]
  tags:
    - rozetka-shared-standart
  services:
    - name: registry.gitlab.rozetka.company/ivv/nimble/php-ci:1.1
      alias: php
    - name: registry.gitlab.rozetka.company/ivv/nimble/nginx-ci:1.0
    # alias: product-api-dev.rozetka.com.ua
    - name: registry.gitlab.rozetka.company/ivv/nimble/postgre-ci:1.0
      alias: selfi-postgre
    - name: redis
      alias: redis
    - name: jamesdbloom/mockserver:latest
      alias: mock-server
    - name: rabbitmq:3.6-management-alpine
      alias: selfi-rabbitmq
    - name: elasticsearch:7.12.1
      alias: selfi-elastic
      command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
  variables:
    ELASTICSEARCH_URL: "http://selfi-elastic:9200"
  before_script:
    - curl http://repo.dev.rozetka.com.ua/devops/vault-1.3.2 --output /bin/vault
    - chmod a+x /bin/vault
    - curl http://repo.dev.rozetka.com.ua/devops/deployer.phar-6.8.0 --output /bin/dep
    - chmod a+x /bin/dep
    - git config --global core.sshCommand 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
    - mkdir /root/.ssh
    - chmod 600 /root/.ssh
    - export VAULT_ADDR=https://vault.rozetka.company:8200
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=nimble-staging jwt=$CI_JOB_JWT)"
    - vault read -field=PROD_PRIVATE devops/infra/rzk > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
  script:
    - cp env.test-default .env.test
    - cp env.test-default .env
    - php artisan migrate
    - sleep 30
    - php artisan test --testsuite=Unit
  only:
    - branches
  except:
    - master


report:
  image: registry.gitlab.rozetka.company/automation-testing-tools/ci-helper-front:allure1.1
  stage: report
  except: [ tags ]
  before_script:
    - echo
  cache: { }
  tags:
    - rozetka-shared-standart
  when: always
  script:
    - allure generate --clean ${CI_PROJECT_DIR}/vendor/ivv/nimble-test/tests/_output/allure-results --report-dir ${CI_PROJECT_DIR}/allure-report
  only:
    - branches
  artifacts:
    when: always
    paths:
      - ./allure-report
    expire_in: 1 week


deploy-dev:
  stage: deploy
  tags:
    - rozetka-shared-standart
  script:
    - consul-template -template "env.dev:.env" -once
    - dep build dev  -p -vv
    - dep deploy dev  -p -vv
  when: manual
  only:
    - branches
  except:
    - master


stop-dev-ms:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ms:stop dev -p -vv
  when: manual
  only:
    - branches
  except:
    - master


stop-dev-gs:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:gs:stop dev -p -vv
  when: manual
  only:
    - branches
  except:
    - master

stop-dev-ps:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ps:stop dev -p -vv
  when: manual
  only:
    - branches
  except:
    - master

stop-dev-bs:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:bs:stop dev -p -vv
  when: manual
  only:
    - branches
  except:
    - master

deploy-preprod:
  stage: deploy
  tags:
    - rozetka-shared-standart
  script:
    - consul-template -template "env.preprod:.env" -once
    - dep build preprod -p -vv
#    - curl -X POST -H "Content-Type:application/json" -d "{\"alias\":\"gitlab\",\"text\":\"* ${CI_PROJECT_NAME}:*   пользователь *${GITLAB_USER_LOGIN}* запустил деплой  \nversion:*$CI_COMMIT_REF_NAME* \npipeline:${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}/   \"}" ${rocket}
    - dep deploy preprod -p -vv
  when: manual

rollback-preprod:
  stage: rollback
  tags:
    - rozetka-shared-standart
  script:
#    - curl -X POST -H "Content-Type:application/json" -d "{\"alias\":\"gitlab\",\"text\":\"* ${CI_PROJECT_NAME}:*   пользователь *${GITLAB_USER_LOGIN}* запустил откат  \nversion:*$CI_COMMIT_REF_NAME* \npipeline:${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}/   \"}" ${rocket}
    - dep rollback preprod -p -vv
  allow_failure: true
  when: manual
  only:
    - branches
  except:
    - master

stop-preprod-ms:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ms:stop preprod -p -vv
  when: manual

stop-preprod-gs:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:gs:stop preprod -p -vv
  when: manual

stop-preprod-bs:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:bs:stop preprod -p -vv
  when: manual

stop-preprod-ps:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ps:stop preprod -p -vv
  when: manual

start-preprod-ms:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ms:start preprod -p -vv
  when: manual

start-preprod-gs:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:gs:start preprod -p -vv
  when: manual

start-preprod-ps:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ps:start preprod -p -vv
  when: manual

start-preprod-bs:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:bs:start preprod -p -vv
  when: manual

deploy-prod:
  stage: deploy
  tags:
    - rozetka-shared-standart
  script:
    - consul-template -template "env.prod:.env" -once
    - dep build prod -p -vv
    - curl -X POST -H "Content-Type:application/json" -d "{\"alias\":\"gitlab\",\"text\":\"* ${CI_PROJECT_NAME}:*   пользователь *${GITLAB_USER_LOGIN}* запустил деплой  \nversion:*$CI_COMMIT_REF_NAME* \npipeline:${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}/   \"}" ${rocket}
    - dep deploy prod -p -vv
  when: manual
  only:
    - master

rollback-prod:
  stage: rollback
  tags:
    - rozetka-shared-standart
  script:
    - curl -X POST -H "Content-Type:application/json" -d "{\"alias\":\"gitlab\",\"text\":\"* ${CI_PROJECT_NAME}:*   пользователь *${GITLAB_USER_LOGIN}* запустил откат  \nversion:*$CI_COMMIT_REF_NAME* \npipeline:${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}/   \"}" ${rocket}
    - dep rollback prod -p -vv
  allow_failure: true
  when: manual
  only:
    - master

stop-ms:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ms:stop prod -p -vv
  when: manual
  only:
    - master

stop-gs:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:gs:stop prod -p -vv
  when: manual
  only:
    - master

stop-bs:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:bs:stop prod -p -vv
  when: manual
  only:
    - master

stop-ps:
  stage: stop-restart
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ps:stop prod -p -vv
  when: manual
  only:
    - master

start-ms:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ms:start prod -p -vv
  when: manual
  only:
    - master

start-gs:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:gs:start prod -p -vv
  when: manual
  only:
    - master

start-ps:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:ps:start prod -p -vv
  when: manual
  only:
    - master

start-bs:
  stage: start
  tags:
    - rozetka-shared-standart
  script:
    - dep consumers:bs:start prod -p -vv
  when: manual
  only:
    - master

jirabot:
  stage: report
  extends: .jirabot-template

include:
  - project: 'common/rozetka-pipelines'
    file: '/support/.jirabot-template.yml'

